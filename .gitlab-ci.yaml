image: node:latest

stages:
    - setup
    - test
    - deploy
    - deploy-qa
    - deploy-v4
    - i18n-upgrade-app
    - i18n-to-crowdin

variables:
    NODE_OPTIONS: --max-old-space-size=4096

before_script:
 - apt-get -y update
 - 'which ssh-agent || apt-get -y install openssh-client'
 - eval $(ssh-agent -s)
 - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
 - git config --global user.email $GIT_CI_EMAIL
 - git config --global user.name $GIT_CI_USERNAME
 - mkdir ~/.ssh 2> /dev/null
 - ssh-keyscan -t rsa ${CI_SERVER_HOST} > ~/.ssh/known_hosts

setup:
    stage: setup
    script:
        - npm ci --no-audit
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CONFIG_GIT} ${CI_PROJECT_DIR}/configApp
        - cp ${CI_PROJECT_DIR}/configApp/.gitconfig ${CI_PROJECT_DIR}/.gitconfig
        - cp ${CI_PROJECT_DIR}/configApp/Angular/appConfig.json ${CI_PROJECT_DIR}/env/env.json
        - cat ${CI_PROJECT_DIR}/configApp/.env > ${CI_PROJECT_DIR}/env/.env
        - echo >> ${CI_PROJECT_DIR}/env/.env
        - cat ${CI_PROJECT_DIR}/configApp/Angular/.env >> ${CI_PROJECT_DIR}/env/.env
        - cat ${CI_PROJECT_DIR}/env/{.env,env.json}
        - npm run config
    artifacts:
        expire_in: 1 days
        paths:
            - node_modules/
            - src/app/config.js
            - env/.env
            - .gitconfig
            - env/env.json

lint:
    stage: test
    script:
        - npm run lint
        - ./tasks/checkInjector.sh --lint

i18n:
    stage: test
    script:
        - npm run i18n:extract
        - npm run i18n:check -- --debug

i18n-upgrade-app:
    stage: i18n-upgrade-app
    tags:
        - heavy
    script:
        - npm run i18n:getlatest
    when: manual

i18n-to-crowdin:
    stage: i18n-to-crowdin
    tags:
        - dind
    script:
        - npm run i18n:upgrade -- --limit-i18n=${I18N_APPROVED}
    when: manual

deploy:
    stage: deploy
    tags:
        - dind
    script:
        - npm run deploy -- --branch=deploy-$BRANCH_DEPLOY --api=$API_DEPLOY --verbose --no-i18n --no-lint --forceFetch --fromCi
    when: manual

deploy-qa:
    stage: deploy-qa
    tags:
        - dind
    script:
        - npm run deploy -- --branch=deploy-alpha --api=$API_DEPLOY --verbose --no-i18n --no-lint --forceFetch --fromCi
    when: manual

deploy-v4:
    stage: deploy-v4
    tags:
        - dind
    script:
        - git checkout v4
        - npm i --no-audit
        - npm run deploy -- --branch=deploy-v4 --remote-pm-settings --remote-calendar --remote-contacts --fromCi --api=$API_DEPLOY
    when: manual
